import java.math.BigInteger;

public class DH {
	private BigInteger p, g, sec, shared;
	
	public DH(String p, String g, String sec) {
		// p has to be prime!
		// g has to be a generator for p
		// all the numbers in 1..p can be generated by doing g ^ x
		this.p = new BigInteger(p);
		this.g = new BigInteger(g);
		this.sec = new BigInteger(sec);
	}
	
	public BigInteger secPart() {
		// sec = g ^ sec (a/b) mod p -> other party
		return g.modPow(sec, p);
	}

	public void send(BigInteger secPart) {
		// secPart ^ sec (a/b) -> shared secret
		shared = secPart.modPow(sec, p);
	}
	
	public String toString() {
		return "shared secret: " + shared;
	}
	
	public static void main(String[] args) {
		DH alice = new DH("23", "5", "6");
		DH bob = new DH("23", "5", "15");
		bob.send(alice.secPart());
		alice.send(bob.secPart());
		System.out.println("Alice's " + alice);
		System.out.println("Bob's   " + bob);		
	}
}
